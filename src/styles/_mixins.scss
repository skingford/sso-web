@use 'variables' as *;

// 响应式媒体查询混入
@mixin mobile {
  @media (max-width: #{breakpoint(md) - 1px}) {
    @content;
  }
}

@mixin mobile-sm {
  @media (max-width: #{breakpoint(sm) - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: #{breakpoint(lg) - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{breakpoint(lg)}) {
    @content;
  }
}

@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{breakpoint(xs) - 1px}) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: #{breakpoint(sm) - 1px}) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: #{breakpoint(md) - 1px}) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: #{breakpoint(lg) - 1px}) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: #{breakpoint(xl) - 1px}) {
      @content;
    }
  } @else if $breakpoint == 2xl {
    @media (max-width: #{breakpoint(2xl) - 1px}) {
      @content;
    }
  }
}

@mixin respond-above($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: #{breakpoint(xs)}) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: #{breakpoint(sm)}) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: #{breakpoint(md)}) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: #{breakpoint(lg)}) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: #{breakpoint(xl)}) {
      @content;
    }
  } @else if $breakpoint == 2xl {
    @media (min-width: #{breakpoint(2xl)}) {
      @content;
    }
  }
}

@mixin respond-between($min, $max) {
  @media (min-width: #{breakpoint($min)}) and (max-width: #{breakpoint($max) - 1px}) {
    @content;
  }
}

@mixin mobile-only {
  @include respond-to(md) {
    @content;
  }
}

@mixin tablet-only {
  @include respond-between(md, lg) {
    @content;
  }
}

@mixin desktop-only {
  @include respond-above(lg) {
    @content;
  }
}

// 卡片样式混入
@mixin card-style {
  @include card-base;
  @include card-hover;
  @include card-with-gradient-border;
}

@mixin card-base {
  background: color(white);
  border-radius: radius(lg);
  box-shadow: shadow(card);
  border: 1px solid color(gray, 200);
  transition: transition(all);
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(10px);
}

@mixin card-elevated {
  @include card-base;
  box-shadow: shadow(card-elevated);
  
  &:hover {
    box-shadow: shadow(card-hover);
    transform: translateY(-2px);
  }
}

@mixin card-interactive {
  @include card-base;
  cursor: pointer;
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: shadow(card-hover);
    border-color: color(primary, 300);
  }
  
  &:active {
    transform: translateY(-1px);
    box-shadow: shadow(card);
  }
}

@mixin card-glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: radius(xl);
  box-shadow: shadow(glass);
  transition: transition(all);
  
  &:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
  }
}

@mixin card-hover {
  transition: transition(all);
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: shadow(card-hover);
  }
}

@mixin card-with-gradient-border {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: gradient(primary);
    transform: scaleX(0);
    transition: transition(transform);
    border-radius: radius(lg) radius(lg) 0 0;
  }
  
  &:hover::before {
    transform: scaleX(1);
  }
}

@mixin card-with-shadow-border {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    background: gradient(primary);
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
    -webkit-mask-composite: xor;
  }
}

// 卡片内容区域
@mixin card-header {
  padding: spacing(6) spacing(6) spacing(4);
  border-bottom: 1px solid color(gray, 100);
}

@mixin card-body {
  padding: spacing(6);
}

@mixin card-footer {
  padding: spacing(4) spacing(6) spacing(6);
  border-top: 1px solid color(gray, 100);
  background: color(gray, 25);
}

// 文字样式混入
@mixin text-style($type) {
  @if $type == hero {
    @include text-hero;
  }
  @if $type == section-title {
    @include text-section-title;
  }
  @if $type == gradient {
    @include text-gradient;
  }
}

@mixin text-gradient {
  background: linear-gradient(135deg, #667eea, #764ba2);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// 别名混入
@mixin gradient-text {
  @include text-gradient;
}

@mixin text-hero {
  font-size: 64px;
  font-weight: 800;
  line-height: 1.1;
  letter-spacing: -0.02em;
  color: #1a202c;
  margin: 0;
  
  @include respond-to(md) {
    font-size: 48px;
  }
  
  @include respond-to(sm) {
    font-size: 36px;
  }
}

@mixin text-section-title {
  font-size: 64px;
  font-weight: 800;
  color: #1a202c;
  letter-spacing: -1px;
  line-height: 1.2;
  word-wrap: break-word;
  overflow-wrap: break-word;
  
  @include respond-to(md) {
    font-size: 48px;
  }
  
  @include respond-to(sm) {
    font-size: 36px;
  }
}

// 布局混入
@mixin container {
  max-width: container-max-width(2xl);
  margin: 0 auto;
  padding: 0 spacing(12);
  
  @include respond-to(lg) {
    max-width: container-max-width(lg);
    padding: 0 spacing(8);
  }
  
  @include respond-to(md) {
    max-width: container-max-width(md);
    padding: 0 spacing(6);
  }
  
  @include respond-to(sm) {
    padding: 0 spacing(4);
  }
}

@mixin container-fluid {
  width: 100%;
  padding: 0 spacing(6);
  
  @include respond-to(md) {
    padding: 0 spacing(4);
  }
}

@mixin section-padding {
  padding: spacing(20) 0;
  
  @include respond-to(lg) {
    padding: spacing(16) 0;
  }
  
  @include respond-to(md) {
    padding: spacing(12) 0;
  }
  
  @include respond-to(sm) {
    padding: spacing(8) 0;
  }
}

@mixin section-padding-sm {
  padding: spacing(12) 0;
  
  @include respond-to(lg) {
    padding: spacing(10) 0;
  }
  
  @include respond-to(md) {
    padding: spacing(8) 0;
  }
  
  @include respond-to(sm) {
    padding: spacing(6) 0;
  }
}

@mixin section-padding-lg {
  padding: spacing(32) 0;
  
  @include respond-to(lg) {
    padding: spacing(24) 0;
  }
  
  @include respond-to(md) {
    padding: spacing(16) 0;
  }
  
  @include respond-to(sm) {
    padding: spacing(12) 0;
  }
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin grid-responsive($min-width: 300px, $gap: spacing(8)) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
  
  @include respond-to(lg) {
    gap: spacing(6);
  }
  
  @include respond-to(md) {
    grid-template-columns: 1fr;
    gap: spacing(6);
  }
  
  @include respond-to(sm) {
    gap: spacing(4);
  }
}

@mixin grid-cols($cols: 12, $gap: spacing(6)) {
  display: grid;
  grid-template-columns: repeat($cols, 1fr);
  gap: $gap;
}

@mixin grid-auto-fit($min-width: 250px, $gap: spacing(6)) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin grid-auto-fill($min-width: 250px, $gap: spacing(6)) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

// 动画混入
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}

@mixin fade-in-up {
  animation: fadeInUp transition-duration(normal) transition-timing(ease-out);
}

@mixin fade-in-down {
  animation: fadeInDown transition-duration(normal) transition-timing(ease-out);
}

@mixin fade-in-left {
  animation: fadeInLeft transition-duration(normal) transition-timing(ease-out);
}

@mixin fade-in-right {
  animation: fadeInRight transition-duration(normal) transition-timing(ease-out);
}

@mixin scale-in {
  animation: scaleIn transition-duration(fast) transition-timing(spring);
}

@mixin slide-up {
  animation: slideUp transition-duration(normal) transition-timing(ease-out);
}

@mixin float-animation {
  animation: float 6s transition-timing(ease-in-out) infinite;
}

@mixin pulse-animation {
  animation: pulse 2s transition-timing(ease-in-out) infinite;
}

@mixin bounce-in {
  animation: bounceIn transition-duration(slow) transition-timing(bounce);
}

@mixin shake {
  animation: shake transition-duration(fast) transition-timing(ease-in-out);
}

// 动画关键帧
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-10px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(10px);
  }
}

// 渐变背景混入
@mixin gradient-bg($gradient) {
  @if $gradient == primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  } @else if $gradient == secondary {
    background: linear-gradient(135deg, #a855f7 0%, #3b82f6 100%);
  } @else if $gradient == footer {
    background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
  }
}

@mixin clip-path-section {
  &::before {
    content: '';
    position: absolute;
    top: -1px;
    left: 0;
    right: 0;
    height: 100px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
  }
}

// 按钮样式混入
@mixin button-style {
  @include button-primary;
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: spacing(3) spacing(6);
  border-radius: radius(md);
  font-weight: font-weight(semibold);
  font-size: font-size(sm);
  line-height: line-height(none);
  text-decoration: none;
  cursor: pointer;
  transition: transition(all);
  border: none;
  outline: none;
  gap: spacing(2);
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  user-select: none;

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none !important;
  }

  &:focus-visible {
    outline: 2px solid color(primary, 500);
    outline-offset: 2px;
  }

  .icon {
    width: spacing(4);
    height: spacing(4);
    flex-shrink: 0;
  }

  .loading-spinner {
    width: spacing(4);
    height: spacing(4);
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
}

@mixin button-primary {
  @include button-base;
  background: gradient(primary);
  color: color(white);
  box-shadow: shadow(sm);

  &:hover:not(:disabled) {
    background: gradient(primary-hover);
    box-shadow: shadow(md);
    transform: translateY(-1px);
  }

  &:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: shadow(sm);
  }
}

@mixin button-secondary {
  @include button-base;
  background: color(white);
  color: color(gray, 700);
  border: 1px solid color(gray, 300);
  box-shadow: shadow(xs);

  &:hover:not(:disabled) {
    background: color(gray, 50);
    border-color: color(gray, 400);
    box-shadow: shadow(sm);
    transform: translateY(-1px);
  }

  &:active:not(:disabled) {
    transform: translateY(0);
    background: color(gray, 100);
  }
}

@mixin button-success {
  @include button-base;
  background: gradient(success);
  color: color(white);
  box-shadow: shadow(sm);

  &:hover:not(:disabled) {
    background: gradient(success-hover);
    box-shadow: shadow(md);
    transform: translateY(-1px);
  }
}

@mixin button-warning {
  @include button-base;
  background: gradient(warning);
  color: color(white);
  box-shadow: shadow(sm);

  &:hover:not(:disabled) {
    background: gradient(warning-hover);
    box-shadow: shadow(md);
    transform: translateY(-1px);
  }
}

@mixin button-danger {
  @include button-base;
  background: gradient(danger);
  color: color(white);
  box-shadow: shadow(sm);

  &:hover:not(:disabled) {
    background: gradient(danger-hover);
    box-shadow: shadow(md);
    transform: translateY(-1px);
  }
}

@mixin button-ghost {
  @include button-base;
  background: transparent;
  color: color(gray, 600);
  border: 1px solid transparent;

  &:hover:not(:disabled) {
    background: color(gray, 100);
    color: color(gray, 800);
  }
}

@mixin button-outline {
  @include button-base;
  background: transparent;
  color: color(primary, 600);
  border: 1px solid color(primary, 300);

  &:hover:not(:disabled) {
    background: color(primary, 50);
    border-color: color(primary, 400);
    color: color(primary, 700);
  }
}

// 按钮尺寸变体
@mixin button-xs {
  padding: spacing(1.5) spacing(3);
  font-size: font-size(xs);
  border-radius: radius(sm);
  
  .icon {
    width: spacing(3);
    height: spacing(3);
  }
}

@mixin button-sm {
  padding: spacing(2) spacing(4);
  font-size: font-size(sm);
  
  .icon {
    width: spacing(3.5);
    height: spacing(3.5);
  }
}

@mixin button-lg {
  padding: spacing(4) spacing(8);
  font-size: font-size(base);
  border-radius: radius(lg);
  
  .icon {
    width: spacing(5);
    height: spacing(5);
  }
}

@mixin button-xl {
  padding: spacing(5) spacing(10);
  font-size: font-size(lg);
  border-radius: radius(lg);
  
  .icon {
    width: spacing(6);
    height: spacing(6);
  }
}

// Footer样式混入
@mixin footer-style {
  @include footer-base;
  @include footer-clip-path;
}

@mixin footer-base {
  @include gradient-bg(footer);
  color: #ffffff;
  position: relative;
  z-index: 10;
}

@mixin footer-clip-path {
  &::before {
    content: '';
    position: absolute;
    top: -1px;
    left: 0;
    right: 0;
    height: 100px;
    background: #f8fafc;
    clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
    z-index: 10;
  }
}

// 链接样式混入
@mixin link-style {
  @include link-base;
}

@mixin link-base {
  color: color(primary, 600);
  text-decoration: none;
  transition: transition(colors);
  position: relative;
  
  &:hover {
    color: color(primary, 700);
  }
  
  &:focus-visible {
    outline: 2px solid color(primary, 500);
    outline-offset: 2px;
    border-radius: radius(sm);
  }
}

@mixin link-underline {
  @include link-base;
  
  &::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background: color(primary, 500);
    transition: transition(all);
  }
  
  &:hover::after {
    width: 100%;
  }
}

@mixin link-gradient {
  @include link-base;
  background: gradient(primary);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  
  &:hover {
    background: gradient(primary-hover);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
}

// 表单样式混入
@mixin form-input {
  display: block;
  width: 100%;
  padding: spacing(3) spacing(4);
  font-size: font-size(sm);
  line-height: line-height(tight);
  color: color(gray, 900);
  background: color(white);
  border: 1px solid color(gray, 300);
  border-radius: radius(md);
  transition: transition(all);
  
  &::placeholder {
    color: color(gray, 400);
  }
  
  &:focus {
    outline: none;
    border-color: color(primary, 500);
    box-shadow: shadow(focus-ring);
  }
  
  &:disabled {
    background: color(gray, 50);
    color: color(gray, 500);
    cursor: not-allowed;
  }
  
  &.error {
    border-color: color(danger, 500);
    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
  }
  
  &.success {
    border-color: color(success, 500);
    box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
  }
}

@mixin form-label {
  display: block;
  font-size: font-size(sm);
  font-weight: font-weight(medium);
  color: color(gray, 700);
  margin-bottom: spacing(2);
}

@mixin form-error {
  font-size: font-size(sm);
  color: color(danger, 600);
  margin-top: spacing(1);
}

@mixin form-help {
  font-size: font-size(sm);
  color: color(gray, 500);
  margin-top: spacing(1);
}

@mixin form-group {
  margin-bottom: spacing(6);
}

@mixin form-checkbox {
  appearance: none;
  width: spacing(4);
  height: spacing(4);
  border: 1px solid color(gray, 300);
  border-radius: radius(sm);
  background: color(white);
  cursor: pointer;
  transition: transition(all);
  position: relative;
  
  &:checked {
    background: color(primary, 500);
    border-color: color(primary, 500);
    
    &::after {
      content: '';
      position: absolute;
      top: 1px;
      left: 4px;
      width: 4px;
      height: 8px;
      border: 2px solid white;
      border-top: 0;
      border-left: 0;
      transform: rotate(45deg);
    }
  }
  
  &:focus {
    outline: none;
    box-shadow: shadow(focus-ring);
  }
}

@mixin form-radio {
  appearance: none;
  width: spacing(4);
  height: spacing(4);
  border: 1px solid color(gray, 300);
  border-radius: 50%;
  background: color(white);
  cursor: pointer;
  transition: transition(all);
  position: relative;
  
  &:checked {
    border-color: color(primary, 500);
    
    &::after {
      content: '';
      position: absolute;
      top: 2px;
      left: 2px;
      width: 8px;
      height: 8px;
      background: color(primary, 500);
      border-radius: 50%;
    }
  }
  
  &:focus {
    outline: none;
    box-shadow: shadow(focus-ring);
  }
}

@mixin form-select {
  @include form-input;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  background-position: right spacing(3) center;
  background-repeat: no-repeat;
  background-size: spacing(4);
  padding-right: spacing(10);
  cursor: pointer;
  
  &:focus {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%233b82f6' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  }
}

// 响应式工具类
.container {
  @include container;
}

.container-fluid {
  @include container-fluid;
}

.section-padding {
  @include section-padding;
}

.section-padding-sm {
  @include section-padding-sm;
}

.section-padding-lg {
  @include section-padding-lg;
}

// 响应式显示工具类
.hidden {
  display: none !important;
}

.block {
  display: block !important;
}

.inline-block {
  display: inline-block !important;
}

.inline {
  display: inline !important;
}

.flex {
  display: flex !important;
}

.inline-flex {
  display: inline-flex !important;
}

.grid {
  display: grid !important;
}

.inline-grid {
  display: inline-grid !important;
}

// 移动端显示控制
@include mobile {
  .hidden-mobile {
    display: none !important;
  }
  
  .block-mobile {
    display: block !important;
  }
  
  .flex-mobile {
    display: flex !important;
  }
  
  .grid-mobile {
    display: grid !important;
  }
}

// 平板显示控制
@include tablet {
  .hidden-tablet {
    display: none !important;
  }
  
  .block-tablet {
    display: block !important;
  }
  
  .flex-tablet {
    display: flex !important;
  }
  
  .grid-tablet {
    display: grid !important;
  }
}

// 桌面显示控制
@include desktop {
  .hidden-desktop {
    display: none !important;
  }
  
  .block-desktop {
    display: block !important;
  }
  
  .flex-desktop {
    display: flex !important;
  }
  
  .grid-desktop {
    display: grid !important;
  }
}

// 响应式文字大小
.text-xs {
  font-size: var(--font-size-xs);
  line-height: var(--line-height-tight);
}

.text-sm {
  font-size: var(--font-size-sm);
  line-height: var(--line-height-snug);
}

.text-base {
  font-size: var(--font-size-base);
  line-height: var(--line-height-body);
}

.text-lg {
  font-size: var(--font-size-lg);
  line-height: var(--line-height-relaxed);
}

.text-xl {
  font-size: var(--font-size-xl);
  line-height: var(--line-height-relaxed);
}

.text-2xl {
  font-size: var(--font-size-2xl);
  line-height: var(--line-height-heading);
}

.text-3xl {
  font-size: var(--font-size-3xl);
  line-height: var(--line-height-heading);
}

.text-4xl {
  font-size: var(--font-size-4xl);
  line-height: var(--line-height-none);
}

.text-5xl {
  font-size: var(--font-size-5xl);
  line-height: var(--line-height-none);
}

.text-6xl {
  font-size: var(--font-size-6xl);
  line-height: var(--line-height-none);
}

// 响应式文字对齐
.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

@include mobile {
  .text-left-mobile {
    text-align: left;
  }
  
  .text-center-mobile {
    text-align: center;
  }
  
  .text-right-mobile {
    text-align: right;
  }
}

@include tablet {
  .text-left-tablet {
    text-align: left;
  }
  
  .text-center-tablet {
    text-align: center;
  }
  
  .text-right-tablet {
    text-align: right;
  }
}

@include desktop {
  .text-left-desktop {
    text-align: left;
  }
  
  .text-center-desktop {
    text-align: center;
  }
  
  .text-right-desktop {
    text-align: right;
  }
}

// 响应式间距工具类
.m-0 { margin: 0; }
.m-1 { margin: var(--spacing-1); }
.m-2 { margin: var(--spacing-2); }
.m-3 { margin: var(--spacing-3); }
.m-4 { margin: var(--spacing-4); }
.m-5 { margin: var(--spacing-5); }
.m-6 { margin: var(--spacing-6); }
.m-8 { margin: var(--spacing-8); }
.m-10 { margin: var(--spacing-10); }
.m-12 { margin: var(--spacing-12); }
.m-16 { margin: var(--spacing-16); }
.m-20 { margin: var(--spacing-20); }
.m-24 { margin: var(--spacing-24); }
.m-32 { margin: var(--spacing-32); }

.mx-0 { margin-left: 0; margin-right: 0; }
.mx-1 { margin-left: var(--spacing-1); margin-right: var(--spacing-1); }
.mx-2 { margin-left: var(--spacing-2); margin-right: var(--spacing-2); }
.mx-3 { margin-left: var(--spacing-3); margin-right: var(--spacing-3); }
.mx-4 { margin-left: var(--spacing-4); margin-right: var(--spacing-4); }
.mx-5 { margin-left: var(--spacing-5); margin-right: var(--spacing-5); }
.mx-6 { margin-left: var(--spacing-6); margin-right: var(--spacing-6); }
.mx-8 { margin-left: var(--spacing-8); margin-right: var(--spacing-8); }
.mx-auto { margin-left: auto; margin-right: auto; }

.my-0 { margin-top: 0; margin-bottom: 0; }
.my-1 { margin-top: var(--spacing-1); margin-bottom: var(--spacing-1); }
.my-2 { margin-top: var(--spacing-2); margin-bottom: var(--spacing-2); }
.my-3 { margin-top: var(--spacing-3); margin-bottom: var(--spacing-3); }
.my-4 { margin-top: var(--spacing-4); margin-bottom: var(--spacing-4); }
.my-5 { margin-top: var(--spacing-5); margin-bottom: var(--spacing-5); }
.my-6 { margin-top: var(--spacing-6); margin-bottom: var(--spacing-6); }
.my-8 { margin-top: var(--spacing-8); margin-bottom: var(--spacing-8); }

.mt-0 { margin-top: 0; }
.mt-1 { margin-top: var(--spacing-1); }
.mt-2 { margin-top: var(--spacing-2); }
.mt-3 { margin-top: var(--spacing-3); }
.mt-4 { margin-top: var(--spacing-4); }
.mt-5 { margin-top: var(--spacing-5); }
.mt-6 { margin-top: var(--spacing-6); }
.mt-8 { margin-top: var(--spacing-8); }
.mt-10 { margin-top: var(--spacing-10); }
.mt-12 { margin-top: var(--spacing-12); }
.mt-16 { margin-top: var(--spacing-16); }
.mt-20 { margin-top: var(--spacing-20); }
.mt-24 { margin-top: var(--spacing-24); }

.mb-0 { margin-bottom: 0; }
.mb-1 { margin-bottom: var(--spacing-1); }
.mb-2 { margin-bottom: var(--spacing-2); }
.mb-3 { margin-bottom: var(--spacing-3); }
.mb-4 { margin-bottom: var(--spacing-4); }
.mb-5 { margin-bottom: var(--spacing-5); }
.mb-6 { margin-bottom: var(--spacing-6); }
.mb-8 { margin-bottom: var(--spacing-8); }
.mb-10 { margin-bottom: var(--spacing-10); }
.mb-12 { margin-bottom: var(--spacing-12); }
.mb-16 { margin-bottom: var(--spacing-16); }
.mb-20 { margin-bottom: var(--spacing-20); }
.mb-24 { margin-bottom: var(--spacing-24); }

.ml-0 { margin-left: 0; }
.ml-1 { margin-left: var(--spacing-1); }
.ml-2 { margin-left: var(--spacing-2); }
.ml-3 { margin-left: var(--spacing-3); }
.ml-4 { margin-left: var(--spacing-4); }
.ml-5 { margin-left: var(--spacing-5); }
.ml-6 { margin-left: var(--spacing-6); }
.ml-8 { margin-left: var(--spacing-8); }
.ml-auto { margin-left: auto; }

.mr-0 { margin-right: 0; }
.mr-1 { margin-right: var(--spacing-1); }
.mr-2 { margin-right: var(--spacing-2); }
.mr-3 { margin-right: var(--spacing-3); }
.mr-4 { margin-right: var(--spacing-4); }
.mr-5 { margin-right: var(--spacing-5); }
.mr-6 { margin-right: var(--spacing-6); }
.mr-8 { margin-right: var(--spacing-8); }
.mr-auto { margin-right: auto; }

// 内边距工具类
.p-0 { padding: 0; }
.p-1 { padding: var(--spacing-1); }
.p-2 { padding: var(--spacing-2); }
.p-3 { padding: var(--spacing-3); }
.p-4 { padding: var(--spacing-4); }
.p-5 { padding: var(--spacing-5); }
.p-6 { padding: var(--spacing-6); }
.p-8 { padding: var(--spacing-8); }
.p-10 { padding: var(--spacing-10); }
.p-12 { padding: var(--spacing-12); }
.p-16 { padding: var(--spacing-16); }
.p-20 { padding: var(--spacing-20); }
.p-24 { padding: var(--spacing-24); }

.px-0 { padding-left: 0; padding-right: 0; }
.px-1 { padding-left: var(--spacing-1); padding-right: var(--spacing-1); }
.px-2 { padding-left: var(--spacing-2); padding-right: var(--spacing-2); }
.px-3 { padding-left: var(--spacing-3); padding-right: var(--spacing-3); }
.px-4 { padding-left: var(--spacing-4); padding-right: var(--spacing-4); }
.px-5 { padding-left: var(--spacing-5); padding-right: var(--spacing-5); }
.px-6 { padding-left: var(--spacing-6); padding-right: var(--spacing-6); }
.px-8 { padding-left: var(--spacing-8); padding-right: var(--spacing-8); }

.py-0 { padding-top: 0; padding-bottom: 0; }
.py-1 { padding-top: var(--spacing-1); padding-bottom: var(--spacing-1); }
.py-2 { padding-top: var(--spacing-2); padding-bottom: var(--spacing-2); }
.py-3 { padding-top: var(--spacing-3); padding-bottom: var(--spacing-3); }
.py-4 { padding-top: var(--spacing-4); padding-bottom: var(--spacing-4); }
.py-5 { padding-top: var(--spacing-5); padding-bottom: var(--spacing-5); }
.py-6 { padding-top: var(--spacing-6); padding-bottom: var(--spacing-6); }
.py-8 { padding-top: var(--spacing-8); padding-bottom: var(--spacing-8); }

.pt-0 { padding-top: 0; }
.pt-1 { padding-top: var(--spacing-1); }
.pt-2 { padding-top: var(--spacing-2); }
.pt-3 { padding-top: var(--spacing-3); }
.pt-4 { padding-top: var(--spacing-4); }
.pt-5 { padding-top: var(--spacing-5); }
.pt-6 { padding-top: var(--spacing-6); }
.pt-8 { padding-top: var(--spacing-8); }
.pt-10 { padding-top: var(--spacing-10); }
.pt-12 { padding-top: var(--spacing-12); }
.pt-16 { padding-top: var(--spacing-16); }
.pt-20 { padding-top: var(--spacing-20); }
.pt-24 { padding-top: var(--spacing-24); }

.pb-0 { padding-bottom: 0; }
.pb-1 { padding-bottom: var(--spacing-1); }
.pb-2 { padding-bottom: var(--spacing-2); }
.pb-3 { padding-bottom: var(--spacing-3); }
.pb-4 { padding-bottom: var(--spacing-4); }
.pb-5 { padding-bottom: var(--spacing-5); }
.pb-6 { padding-bottom: var(--spacing-6); }
.pb-8 { padding-bottom: var(--spacing-8); }
.pb-10 { padding-bottom: var(--spacing-10); }
.pb-12 { padding-bottom: var(--spacing-12); }
.pb-16 { padding-bottom: var(--spacing-16); }
.pb-20 { padding-bottom: var(--spacing-20); }
.pb-24 { padding-bottom: var(--spacing-24); }

.pl-0 { padding-left: 0; }
.pl-1 { padding-left: var(--spacing-1); }
.pl-2 { padding-left: var(--spacing-2); }
.pl-3 { padding-left: var(--spacing-3); }
.pl-4 { padding-left: var(--spacing-4); }
.pl-5 { padding-left: var(--spacing-5); }
.pl-6 { padding-left: var(--spacing-6); }
.pl-8 { padding-left: var(--spacing-8); }

.pr-0 { padding-right: 0; }
.pr-1 { padding-right: var(--spacing-1); }
.pr-2 { padding-right: var(--spacing-2); }
.pr-3 { padding-right: var(--spacing-3); }
.pr-4 { padding-right: var(--spacing-4); }
.pr-5 { padding-right: var(--spacing-5); }
.pr-6 { padding-right: var(--spacing-6); }
.pr-8 { padding-right: var(--spacing-8); }

// 响应式间距 - 移动端
@include mobile {
  .m-mobile-0 { margin: 0; }
  .m-mobile-1 { margin: var(--spacing-1); }
  .m-mobile-2 { margin: var(--spacing-2); }
  .m-mobile-3 { margin: var(--spacing-3); }
  .m-mobile-4 { margin: var(--spacing-4); }
  .m-mobile-6 { margin: var(--spacing-6); }
  
  .p-mobile-0 { padding: 0; }
  .p-mobile-1 { padding: var(--spacing-1); }
  .p-mobile-2 { padding: var(--spacing-2); }
  .p-mobile-3 { padding: var(--spacing-3); }
  .p-mobile-4 { padding: var(--spacing-4); }
  .p-mobile-6 { padding: var(--spacing-6); }
  
  .px-mobile-2 { padding-left: var(--spacing-2); padding-right: var(--spacing-2); }
  .px-mobile-3 { padding-left: var(--spacing-3); padding-right: var(--spacing-3); }
  .px-mobile-4 { padding-left: var(--spacing-4); padding-right: var(--spacing-4); }
  
  .py-mobile-2 { padding-top: var(--spacing-2); padding-bottom: var(--spacing-2); }
  .py-mobile-3 { padding-top: var(--spacing-3); padding-bottom: var(--spacing-3); }
  .py-mobile-4 { padding-top: var(--spacing-4); padding-bottom: var(--spacing-4); }
}

// 响应式间距 - 平板
@include tablet {
  .m-tablet-0 { margin: 0; }
  .m-tablet-2 { margin: var(--spacing-2); }
  .m-tablet-4 { margin: var(--spacing-4); }
  .m-tablet-6 { margin: var(--spacing-6); }
  .m-tablet-8 { margin: var(--spacing-8); }
  
  .p-tablet-0 { padding: 0; }
  .p-tablet-2 { padding: var(--spacing-2); }
  .p-tablet-4 { padding: var(--spacing-4); }
  .p-tablet-6 { padding: var(--spacing-6); }
  .p-tablet-8 { padding: var(--spacing-8); }
}

// 响应式间距 - 桌面
@include desktop {
  .m-desktop-0 { margin: 0; }
  .m-desktop-4 { margin: var(--spacing-4); }
  .m-desktop-6 { margin: var(--spacing-6); }
  .m-desktop-8 { margin: var(--spacing-8); }
  .m-desktop-12 { margin: var(--spacing-12); }
  .m-desktop-16 { margin: var(--spacing-16); }
  
  .p-desktop-0 { padding: 0; }
  .p-desktop-4 { padding: var(--spacing-4); }
  .p-desktop-6 { padding: var(--spacing-6); }
  .p-desktop-8 { padding: var(--spacing-8); }
  .p-desktop-12 { padding: var(--spacing-12); }
  .p-desktop-16 { padding: var(--spacing-16); }
}